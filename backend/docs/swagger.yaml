basePath: /
definitions:
  auth.JoinModel:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  auth.LoginModel:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  product.Dto:
    properties:
      author:
        $ref: '#/definitions/user.Dto'
      category:
        description: TODO
        type: string
      coverUrl:
        type: string
      createdAt:
        type: string
      description:
        type: string
      gallery:
        items:
          type: string
        type: array
      id:
        type: integer
      info:
        additionalProperties:
          type: string
        type: object
      isLiked:
        type: boolean
      isViewed:
        type: boolean
      licence:
        type: string
      likesCount:
        type: integer
      name:
        type: string
      price:
        type: number
      tags:
        items:
          type: string
        type: array
      viewsCount:
        type: integer
    type: object
  product.UpdateInfo:
    properties:
      category:
        type: string
      name:
        type: string
      price:
        type: number
      productId:
        type: integer
    required:
    - category
    - name
    - price
    - productId
    type: object
  review.UserReviewDto:
    properties:
      author:
        $ref: '#/definitions/user.Dto'
      rated:
        $ref: '#/definitions/user.Dto'
      text:
        type: string
    type: object
  review.UserUpload:
    properties:
      text:
        type: string
    required:
    - text
    type: object
  user.Dto:
    properties:
      avatarUrl:
        type: string
      id:
        type: integer
      name:
        type: string
      reputation:
        $ref: '#/definitions/user.Reputation'
      salesCount:
        type: integer
    type: object
  user.Reputation:
    properties:
      reviews:
        type: integer
      reviewsThisMonth:
        type: integer
      reviewsThisWeek:
        type: integer
      total:
        type: number
    type: object
host: localhost:8080
info:
  contact: {}
  title: 3Dcon
paths:
  /account:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.Dto'
      security:
      - ApiKeyAuth: []
      tags:
      - account
  /account/avatar:
    patch:
      consumes:
      - multipart/form-data
      parameters:
      - description: новый аватар
        in: formData
        name: avatar
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - account
  /account/me:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.Dto'
      security:
      - ApiKeyAuth: []
      tags:
      - account
  /auth/join:
    post:
      consumes:
      - application/json
      parameters:
      - description: join
        in: body
        name: join
        required: true
        schema:
          $ref: '#/definitions/auth.JoinModel'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/auth.LoginModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      tags:
      - auth
  /filestorage/{bucket}/{filename}:
    get:
      consumes:
      - application/json
      parameters:
      - description: bucket
        in: path
        name: bucket
        required: true
        type: string
      - description: filename
        in: path
        name: filename
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      tags:
      - filestorage
  /products:
    get:
      consumes:
      - application/json
      parameters:
      - description: offset
        in: query
        name: offset
        required: true
        type: integer
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      - description: orderBy
        in: query
        name: orderBy
        type: string
      - description: isDesc
        in: query
        name: isDesc
        type: boolean
      - description: filter
        in: query
        name: filterBy
        type: string
      - description: author
        in: query
        name: author
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product.Dto'
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - product
  /products/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - product
    get:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product.Dto'
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - product
  /products/like/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - interaction
    patch:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - interaction
  /products/my:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product.Dto'
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - product
  /products/update:
    patch:
      consumes:
      - application/json
      parameters:
      - description: update
        in: body
        name: update
        required: true
        schema:
          $ref: '#/definitions/product.UpdateInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - product
  /products/upload:
    post:
      consumes:
      - multipart/form-data
      operationId: product.upload
      parameters:
      - description: cover
        in: formData
        name: cover
        required: true
        type: file
      - description: category
        in: formData
        name: category
        required: true
        type: string
      - description: name
        in: formData
        name: name
        required: true
        type: string
      - description: licence
        in: formData
        name: licence
        required: true
        type: string
      - description: description
        in: formData
        name: description
        required: true
        type: string
      - description: price
        in: formData
        name: price
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - product
  /products/view/{id}:
    patch:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - interaction
  /user/{username}:
    get:
      consumes:
      - application/json
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.Dto'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      tags:
      - user
  /user/review:
    get:
      consumes:
      - application/json
      parameters:
      - description: offset
        in: query
        name: offset
        required: true
        type: integer
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      - description: ratedId
        in: query
        name: ratedId
        type: integer
      - description: authorId
        in: query
        name: authorId
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/review.UserReviewDto'
        "400":
          description: Bad Request
          schema:
            type: string
      tags:
      - interaction
  /user/review/{ratedId}:
    post:
      consumes:
      - application/json
      parameters:
      - description: userReview
        in: body
        name: review
        required: true
        schema:
          $ref: '#/definitions/review.UserUpload'
      - description: ratedId
        in: path
        name: ratedId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - interaction
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
